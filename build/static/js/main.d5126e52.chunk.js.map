{"version":3,"sources":["utils/styles.js","utils/functions.js","components/ToggleButton.module.css","actions/userActions.js","constants/userConstants.js","components/Header.js","components/Menu.js","components/Footer.js","components/Select.js","actions/groupActions.js","constants/groupConstants.js","components/SelectFilter.js","components/HeaderContent.js","components/ModalButton.js","components/form/Input.js","components/loader/DataTableLoader.js","components/Loader.js","components/Message.js","components/loader/LoaderHandler.js","components/Search.js","components/Pagination.js","actions/contactActions.js","constants/contactConstants.js","screens/contact/ContactScreen.js","components/ButtonGoBack.js","screens/contact/ContactEditScreen.js","components/ToggleButton.js","actions/shareActions.js","screens/contact/ContactShareScreen.js","screens/import/ImportContactScreen.js","screens/group/GroupScreen.js","screens/group/GroupEditScreen.js","auth/PrivateRoute.js","auth/index.js","screens/NotFoundScreen.js","Main.js","screens/auth/LoginScreen.js","screens/auth/SignUpScreen.js","App.js","store.js","reducers/userReducers.js","reducers/contactReducers.js","reducers/groupReducers.js","index.js"],"names":["exports","modalStyles","content","top","left","right","bottom","marginRight","width","transform","capitalize","s","charAt","toUpperCase","slice","module","login","email","password","dispatch","a","type","config","headers","axios","post","process","data","payload","localStorage","setItem","JSON","stringify","response","message","listUsers","keyword","pageNumber","getState","userInfo","userLogin","Authorization","token","get","_id","Header","useDispatch","handleLogout","e","preventDefault","removeItem","className","data-widget","href","role","style","cursor","onClick","data-slide","Menu","history","useSelector","state","useEffect","redirectTo","to","pathname","referrer","src","image","alt","name","data-accordion","Footer","Select","items","setData","disabled","search","useState","current","setCurrent","mapSelect","forEach","item","value","map","label","id","options","onChange","element","parseInt","onKeyDown","onFocus","placeholder","isDisabled","isSearchable","listGroups","SelectFilter","filterGroup","setFilterGroup","setPage","searchTerm","groups","groupList","HeaderContent","ModalButton","modal","setModal","classes","Input","errors","htmlFor","aria-describedby","target","DataTableLoader","props","speed","backgroundColor","foregroundColor","height","x","y","rx","ry","Loader","variable","Message","color","LoaderHandler","loading","error","loader","render","Search","setKeyword","setSearchTerm","handleClickButton","onKeyPress","event","key","Pagination","pages","page","Array","keys","listContacts","createContact","contact","phone","groupId","userId","deleteContact","delete","window","location","Modal","setAppElement","ContactScreen","match","modalIsOpen","setModalIsOpen","setName","setPhone","setEmail","setGroupId","setErrors","setPageNumber","contactList","contacts","contactCreate","createLoading","createSuccess","success","createError","headersCSV","handleSubmit","errorsCheck","Object","length","searchGroup","isOpen","onRequestClose","onSubmit","filename","group","createdAt","userContact","mode","ButtonGoBack","goBack","ContactEditScreen","contactId","params","contactDetails","contactUpdate","loadingUpdate","errorUpdate","successUpdate","push","put","updateContact","ToggleButton","toggled","isToggled","setIsToggled","styles","csslabel","cssinput","defaultChecked","isShared","alert","shareContact","cssspan","ContactShareScreen","useParams","setPassword","setIsAdmin","userList","users","userRegister","logState","user","usercontact","filter","ImportContactScreen","file","setFile","setArray","fileReader","FileReader","textAlign","onload","array","string","indexOf","split","csvRows","displayRecords","i","newRow","aRow","replaceAll","csvFileToArray","result","readAsText","accept","files","GroupScreen","groupCreate","createGroup","deleteRow","deleteGroup","GroupEditScreen","groupDetails","groupUpdate","updateGroup","PrivateRoute","Component","component","rest","getItem","parse","from","NotFoundScreen","Main","path","LoginScreen","cfpassword","setCfPassword","isAdmin","signup","App","SignUpScreen","reducer","combineReducers","action","userDetails","userUpdate","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d5126e52.chunk.js","sourcesContent":["exports.modalStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        width: 400,\n        transform: \"translate(-50%, -50%)\",\n    },\n};\n","exports.capitalize = (s) => {\n    if (typeof s !== \"string\") return \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"csslabel\":\"ToggleButton_csslabel__2DmAO\",\"cssinput\":\"ToggleButton_cssinput__FFQ7C\",\"cssspan\":\"ToggleButton_cssspan__1Bqll\"};","import axios from \"axios\";\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DETAILS_RESET,\n} from \"./../constants/userConstants\";\n\n//login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        //get login data\n        const { data } = await axios.post(\n            process.env.REACT_APP_BACKEND_URL+\"/api/users/login\",\n            { email, password },\n            config\n        );\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        //set user info into local storage\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//logout\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: USER_DETAILS_RESET });\n    dispatch({ type: USER_LOGOUT });\n};\n\n//get all users\nexport const listUsers =\n    (keyword = \"\", pageNumber = \"\") =>\n    async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_LIST_REQUEST,\n            });\n\n            //get user from state\n            const {\n                userLogin: { userInfo },\n            } = getState();\n\n            //headers\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            };\n\n            //get all users\n            const { data } = await axios.get(\n                process.env.REACT_APP_BACKEND_URL+`/api/users?keyword=${keyword}&pageNumber=${pageNumber}&userId=${userInfo._id}`,\n                config\n            );\n            dispatch({\n                type: USER_LIST_SUCCESS,\n                payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: USER_LIST_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            });\n        }\n    };\n\n//register an user\nexport const register = (user) => async (dispatch, getState) => {\n    const { name, email, password, isAdmin } = user;\n\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //get login data\n        const { data } = await axios.post(\n            process.env.REACT_APP_BACKEND_URL+\"/api/users\",\n            { name, email, password, isAdmin },\n            config\n        );\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//signup an user\nexport const signup = (user) => async (dispatch, getState) => {\n    const { name, email, password, cfpassword, isAdmin } = user;\n    if (password !== cfpassword) {\n        return dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: 'confirm password not match'\n        });\n    }\n    //console.log(password);return false;\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n                //Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //get login data\n        const { data } = await axios.post(\n            process.env.REACT_APP_BACKEND_URL+\"/api/users/signup\",\n            { name, email, password, isAdmin },\n            config\n        );\n        if (data) {\n            alert('register success');\n            window.location.href = \"/login\";\n        }\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get user details\nexport const listUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get product\n        const { data } = await axios.get(process.env.REACT_APP_BACKEND_URL+`/api/users/${id}`, config);\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update an user\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update user\n        const { data } = await axios.put(process.env.REACT_APP_BACKEND_URL+`/api/users/${user.id}`, user, config);\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete user\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete user\n        await axios.delete(process.env.REACT_APP_BACKEND_URL+`/api/users/${id}`, config);\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update profile\nexport const updateProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update user\n        const { data } = await axios.put(\n            `/api/users/profile/${user.id}`,\n            user,\n            config\n        );\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\nexport const USER_DELETE_RESET = \"USER_DELETE_RESET\";\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../actions/userActions';\n\n\nconst Header = () => {\n    \n    const dispatch = useDispatch()\n    const handleLogout = (e) => {\n        e.preventDefault()\n        dispatch(logout())\n       \n    }\n    return ( \n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n            {/* Left navbar links */}\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"/\" role=\"button\"><i className=\"fas fa-bars\" /></a>\n                </li>\n\n            </ul>\n\n            {/* Right navbar links */}\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                <span\n                    style={{cursor:'pointer'}} \n                    onClick={(e) => handleLogout(e)}\n                    className=\"nav-link\" \n                    data-widget=\"control-sidebar\" \n                    data-slide=\"true\"  \n                    role=\"button\">\n                        <i className=\"fas fa-power-off\"></i> Logout\n                </span>\n                </li>\n            </ul>\n        </nav>\n   \n     );\n}\n \nexport default Header;","import React, { useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Menu = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (!userInfo) {\n            redirectTo();\n        }\n    }, [dispatch, userInfo]);\n\n    const redirectTo = () => {\n        return (\n            <Redirect\n                to={{\n                    pathname: \"/login\",\n                    state: { referrer: \"/\" },\n                }}\n            />\n        );\n    };\n\n    return (\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\n            {/* Brand Logo */}\n            {/* <Link to={\"/dashboard\"} className=\"brand-link\">\n                <img\n                    src=\"/logo.png\"\n                    alt=\"AdminLTE Logo\"\n                    className=\"brand-image img-circle elevation-3\"\n                    style={{ opacity: \".8\" }}\n                />\n                <span className=\"brand-text font-weight-light\">DEMO</span>\n            </Link> */}\n            {/* Sidebar */}\n            <div className=\"sidebar\">\n                {/* Sidebar user panel (optional) */}\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n                    <div className=\"image\">\n                        <img\n                            src={userInfo ? userInfo.image : \"/avatar.png\"}\n                            className=\"img-circle elevation-2\"\n                            alt=\"User\"\n                        />\n                    </div>\n                    <div className=\"info\">\n                        <Link to=\"/profile\" className=\"d-block\">\n                            {userInfo ? userInfo.name : \"\"}\n                        </Link>\n                    </div>\n                </div>\n                {/* Sidebar Menu */}\n                <nav className=\"mt-2\">\n                    <ul\n                        className=\"nav nav-pills nav-sidebar flex-column\"\n                        data-widget=\"treeview\"\n                        role=\"menu\"\n                        data-accordion=\"false\"\n                    >\n                        \n\n                       \n                                <li className=\"nav-header\"></li>\n                                <li className=\"nav-item\">\n                                    {/* <Link to=\"/user\" className=\"nav-link\">\n                                        <i className=\"nav-icon fas fa-user\" />{\" \"}\n                                        <p> Users</p>\n                                    </Link> */}\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/contact\" className=\"nav-link\">\n                                        <i className=\"nav-icon fas fa-user\" />{\" \"}\n                                        <p> Contacts</p>\n                                    </Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/group\" className=\"nav-link\">\n                                        <i className=\"nav-icon fas fa-users\" />{\" \"}\n                                        <p> Groups</p>\n                                    </Link>\n                                </li>\n                         \n\n                        \n                    </ul>\n                </nav>\n                {/* /.sidebar-menu */}\n            </div>\n            {/* /.sidebar */}\n        </aside>\n    );\n};\n\nexport default Menu;\n","// import React from 'react';\n\n// const Footer = () => {\n//     return ( \n//         <footer className=\"main-footer\">\n//             <strong>Copyright © 2014-2019 <a href=\"http://adminlte.io\">AdminLTE.io</a>.</strong>\n//             All rights reserved.\n//             <div className=\"float-right d-none d-sm-inline-block\">\n//                 <b>Version</b> 3.0.5\n//             </div>\n//         </footer>\n//      );\n// }\n \n// export default Footer;\n\nimport React from 'react';\n\nconst Footer = () => {\n    return ( \n        <footer className=\"main-footer\">\n            <div className=\"float-right d-none d-sm-inline-block\">\n            </div>\n        </footer>\n     );\n}\n \nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport ReactSelect from \"react-select\";\n\nconst Select = ({ items, data, setData, disabled, search = () => {} }) => {\n    const [current, setCurrent] = useState(null);\n\n    useEffect(() => {\n        mapSelect().forEach((item) => {\n            if (item.value === data) {\n                setCurrent(item);\n            }\n        });\n    }, [items, data]);\n\n    const mapSelect = () => {\n        const mapped = items.map((item) => ({\n            label: item.name,\n            value: item.id,\n        }));\n        return mapped;\n    };\n\n    const handleChange = (element) => {\n        setCurrent(element);\n        setData(parseInt(element.value));\n    };\n\n    return (\n        <> \n        <label >Group</label>\n        <ReactSelect\n            options={mapSelect()}\n            onChange={handleChange}\n            value={current}\n            onKeyDown={search}\n            onFocus={search}\n            placeholder=\"Select value\"\n            isDisabled={disabled}\n            isSearchable\n        />\n        </>\n    );\n};\n\nexport default Select;\n","import axios from \"axios\";\nimport {\n    GROUP_LIST_REQUEST,\n    GROUP_LIST_SUCCESS,\n    GROUP_LIST_FAIL,\n    GROUP_CREATE_REQUEST,\n    GROUP_CREATE_SUCCESS,\n    GROUP_CREATE_FAIL,\n    GROUP_DETAILS_REQUEST,\n    GROUP_DETAILS_SUCCESS,\n    GROUP_DETAILS_FAIL,\n    GROUP_UPDATE_REQUEST,\n    GROUP_UPDATE_SUCCESS,\n    GROUP_UPDATE_FAIL,\n    GROUP_DELETE_REQUEST,\n    GROUP_DELETE_SUCCESS,\n    GROUP_DELETE_FAIL,\n} from \"../constants/groupConstants\";\n\n//get all groups with pagination\nexport const listGroups =\n    (keyword = \"\", pageNumber = \"\") =>\n    async (dispatch, getState) => { \n        try {\n            dispatch({\n                type: GROUP_LIST_REQUEST,\n            });\n            //alert(555)\n            //get user from state\n            const {\n                userLogin: { userInfo },\n            } = getState();\n\n            //headers\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            };\n            //console.log(config);return false;\n            //get all groups\n            const { data } = await axios.get(\n                process.env.REACT_APP_BACKEND_URL+`/api/groups?keyword=${keyword}&pageNumber=${pageNumber}`,\n                config\n            );\n\n            dispatch({\n                type: GROUP_LIST_SUCCESS,\n                payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: GROUP_LIST_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            });\n        }\n    };\n\n//create a group\nexport const createGroup = (group) => async (dispatch, getState) => {\n    const { name } = group;\n\n    try {\n        dispatch({\n            type: GROUP_CREATE_REQUEST,\n        });\n\n        //get group from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //create group\n        const { data } = await axios.post(process.env.REACT_APP_BACKEND_URL+\"/api/groups\", { name }, config);\n        dispatch({\n            type: GROUP_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: GROUP_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get group details\nexport const listGroupDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: GROUP_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get group\n        const { data } = await axios.get(process.env.REACT_APP_BACKEND_URL+`/api/groups/${id}`, config);\n        dispatch({\n            type: GROUP_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: GROUP_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a group\nexport const updateGroup = (group) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GROUP_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update group\n        const { data } = await axios.put(\n            `/api/groups/${group.id}`,\n            group,\n            config\n        );\n        dispatch({\n            type: GROUP_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: GROUP_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete group\nexport const deleteGroup = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GROUP_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete group\n        await axios.delete(process.env.REACT_APP_BACKEND_URL+`/api/groups/${id}`, config);\n        dispatch({\n            type: GROUP_DELETE_SUCCESS,\n        });\n        window.location.href = \"/group\";\n    } catch (error) {\n        dispatch({\n            type: GROUP_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","export const GROUP_LIST_REQUEST = \"GROUP_LIST_REQUEST\";\nexport const GROUP_LIST_SUCCESS = \"GROUP_LIST_SUCCESS\";\nexport const GROUP_LIST_FAIL = \"GROUP_LIST_FAIL\";\nexport const GROUP_LIST_RESET = \"GROUP_LIST_RESET\";\n\nexport const GROUP_CREATE_REQUEST = \"GROUP_CREATE_REQUEST\";\nexport const GROUP_CREATE_SUCCESS = \"GROUP_CREATE_SUCCESS\";\nexport const GROUP_CREATE_FAIL = \"GROUP_CREATE_FAIL\";\n\nexport const GROUP_DETAILS_REQUEST = \"GROUP_DETAILS_REQUEST\";\nexport const GROUP_DETAILS_SUCCESS = \"GROUP_DETAILS_SUCCESS\";\nexport const GROUP_DETAILS_FAIL = \"GROUP_DETAILS_FAIL\";\nexport const GROUP_DETAILS_RESET = \"GROUP_DETAILS_RESET\";\n\nexport const GROUP_UPDATE_REQUEST = \"GROUP_UPDATE_REQUEST\";\nexport const GROUP_UPDATE_SUCCESS = \"GROUP_UPDATE_SUCCESS\";\nexport const GROUP_UPDATE_FAIL = \"GROUP_UPDATE_FAIL\";\nexport const GROUP_UPDATE_RESET = \"GROUP_UPDATE_RESET\";\n\nexport const GROUP_DELETE_REQUEST = \"GROUP_DELETE_REQUEST\";\nexport const GROUP_DELETE_SUCCESS = \"GROUP_DELETE_SUCCESS\";\nexport const GROUP_DELETE_FAIL = \"GROUP_DELETE_FAIL\";\nexport const GROUP_DELETE_RESET = \"GROUP_DELETE_RESET\";\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listGroups } from \"../actions/groupActions\";\r\n\r\nconst SelectFilter = ({ filterGroup, setFilterGroup, setPage }) => {\r\n    const [current, setCurrent] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(filterGroup);\r\n    const dispatch = useDispatch();\r\n    const groupList = useSelector((state) => state.groupList);\r\n    const { groups } = groupList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listGroups());\r\n        // mapSelect().forEach((item) => {\r\n        //     if (item.value === data) {\r\n        //         setCurrent(item);\r\n        //     }\r\n        // });\r\n    }, []);\r\n\r\n    const mapSelect = () => {\r\n        if (groups) {\r\n            const mapped = groups.map((item) => ({\r\n                label: item.name,\r\n                value: item.id,\r\n            }));\r\n            return mapped;\r\n        } \r\n        return [];\r\n         \r\n    };\r\n\r\n    const handleChange = (element) => {\r\n       // setCurrent(element);\r\n         setFilterGroup(element.value);\r\n         setPage(1);\r\n    };\r\n\r\n    return (\r\n        <ReactSelect\r\n            options={mapSelect()}\r\n            onChange={handleChange}\r\n            value={searchTerm}\r\n            placeholder=\"Select group\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default SelectFilter;\r\n","import React from 'react';\n\nconst HeaderContent = ({name}) => {\n    return ( \n        <section className=\"content-header\">\n            <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                <h1>{name}</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n                    <li className=\"breadcrumb-item active\">{name}</li>\n                </ol>\n                </div>\n            </div>\n            </div>{/* /.container-fluid */}\n        </section>\n     );\n}\n \nexport default HeaderContent;","import React from 'react';\n\nconst ModalButton = ({modal, setModal, classes}) => {\n    return ( \n        <>\n            <button \n                className={`btn ${classes}`}\n                onClick={() => setModal(!modal)}\n              >\n              {modal ? 'Close' : 'Create'}\n            </button>\n        </>\n     );\n}\n \nexport default ModalButton;","import React from \"react\";\nimport { capitalize } from \"../../utils/functions\";\n\nconst Input = ({ name, type, data, setData, errors, classes = \"\" }) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{capitalize(name)}</label>\n            <input\n                type={type}\n                className={`form-control ${classes}`}\n                id={name}\n                aria-describedby={name}\n                value={data}\n                onChange={(e) => setData(e.target.value)}\n            />\n\n            {errors[name] && (\n                <label className=\"text-danger\">{errors[name]} </label>\n            )}\n        </div>\n    );\n};\n\nexport default Input;\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst DataTableLoader = (props) => (\n  <ContentLoader \n    speed={2}\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    style={{ width: '100%', height: '420px' }}\n    {...props}\n  >\n    <rect x=\"0\" y=\"5\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"50\" /> \n    <rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" /> \n    <rect x=\"0\" y=\"120\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n    <rect x=\"0\" y=\"180\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n    <rect x=\"0\" y=\"240\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n    <rect x=\"0\" y=\"300\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n    <rect x=\"0\" y=\"360\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n\n\n\n  </ContentLoader>\n)\n\nexport default DataTableLoader\n\n","import React from \"react\";\n\nconst Loader = ({ variable }) => {\n    return variable ? (\n        <div className=\"text-center\">\n            <div className=\"spinner-border text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    ) : (\n        \"\"\n    );\n};\n\nexport default Loader;\n","import React from 'react';\n\nconst Message = ({message, color}) => {\n    return message \n        ? \n        <div className={`alert alert-${color}`} role=\"alert\">\n          {message}\n        </div> \n        : \n        '';\n}\n \nexport default Message;","import React from \"react\";\n\nimport Loader from \"../Loader\";\nimport Message from \"../Message\";\n\nconst LoaderHandler = ({ loading, error, loader, render }) => {\n    return (\n        <>\n            {loading ? (\n                loader ? (\n                    loader\n                ) : (\n                    <Loader variable={loading} />\n                )\n            ) : error ? (\n                <Message message={error} color={\"danger\"} />\n            ) : render ? (\n                render()\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\nexport default LoaderHandler;\n","import React, { useState } from \"react\";\n\nconst Search = ({ keyword, setKeyword, setPage }) => {\n    const [searchTerm, setSearchTerm] = useState(keyword);\n\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            handleClickButton();\n        }\n    };\n    const handleClickButton = () => {\n        setKeyword(searchTerm);\n        setPage(1);\n    };\n    return (\n        <div className=\"input-group input-group-sm\" style={{ width: 160 }}>\n            <input\n                value={searchTerm}\n                type=\"text\"\n                name=\"table_search\"\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"form-control float-right\"\n                placeholder=\"Search Name, Phone, Email\"\n                onKeyPress={handleKeyPress}\n            />\n            <div className=\"input-group-append\">\n                <button\n                    onClick={handleClickButton}\n                    type=\"submit\"\n                    className=\"btn btn-default bg-primary\"\n                >\n                    <i className=\"fas fa-search\" />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Pagination = ({ pages, page, setPage }) => {\n    return (\n        pages > 1 && (\n            <nav>\n                <ul className=\"pagination\">\n                    <li className=\"page-item\">\n                        <button\n                            className=\"page-link\"\n                            onClick={() => setPage(page - 1)}\n                            disabled={page < 2}\n                        >\n                            Previous\n                        </button>\n                    </li>\n                    {[...Array(pages).keys()].map((x) => (\n                        <li\n                            key={`page${x}`}\n                            className={`page-item ${\n                                x + 1 === page ? \"active\" : \"\"\n                            }`}\n                        >\n                            <button\n                                className={`page-link `}\n                                onClick={() => setPage(x + 1)}\n                            >\n                                {x + 1}\n                            </button>\n                        </li>\n                    ))}\n\n                    <li className=\"page-item\">\n                        <button\n                            className=\"page-link\"\n                            onClick={() => setPage(page + 1)}\n                            disabled={page >= pages}\n                        >\n                            Next\n                        </button>\n                    </li>\n                </ul>\n            </nav>\n        )\n    );\n};\n\nexport default Pagination;\n","import axios from \"axios\";\nimport {\n    CONTACT_LIST_REQUEST,\n    CONTACT_LIST_SUCCESS,\n    CONTACT_LIST_FAIL,\n    CONTACT_CREATE_REQUEST,\n    CONTACT_CREATE_SUCCESS,\n    CONTACT_CREATE_FAIL,\n    CONTACT_DETAILS_REQUEST,\n    CONTACT_DETAILS_SUCCESS,\n    CONTACT_DETAILS_FAIL,\n    CONTACT_UPDATE_REQUEST,\n    CONTACT_UPDATE_SUCCESS,\n    CONTACT_UPDATE_FAIL,\n    CONTACT_DELETE_REQUEST,\n    CONTACT_DELETE_SUCCESS,\n    CONTACT_DELETE_FAIL,\n} from \"../constants/contactConstants\";\n\n//get all contacts with pagination\nexport const listContacts =\n    (keyword = \"\", pageNumber = \"\", filterGroup=\"\") =>\n    async (dispatch, getState) => { \n        try {\n            dispatch({\n                type: CONTACT_LIST_REQUEST,\n            });\n            //get user from state\n            const {\n                userLogin: { userInfo },\n            } = getState();\n\n            //headers\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            };\n            //get all contacts\n            const { data } = await axios.get(\n                process.env.REACT_APP_BACKEND_URL+`/api/contacts?keyword=${keyword}&pageNumber=${pageNumber}&userId=${userInfo._id}&filterGroup=${filterGroup}`,\n                config\n            );\n            //console.log(data);return false;\n            dispatch({\n                type: CONTACT_LIST_SUCCESS,\n                payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: CONTACT_LIST_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            });\n        }\n    };\n\n//create a contact\nexport const createContact = (contact) => async (dispatch, getState) => {\n    const { name, phone, email, groupId } = contact;\n\n    try {\n        dispatch({\n            type: CONTACT_CREATE_REQUEST,\n        });\n\n        //get contact from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        const userId = userInfo._id;\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //create contact\n        const { data } = await axios.post(process.env.REACT_APP_BACKEND_URL+\"/api/contacts\", { name, phone, email, groupId, userId }, config);\n        dispatch({\n            type: CONTACT_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CONTACT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get contact details\nexport const listContactDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CONTACT_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get contact\n        const { data } = await axios.get(process.env.REACT_APP_BACKEND_URL+`/api/contacts/${id}`, config);\n        dispatch({\n            type: CONTACT_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CONTACT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a contact\nexport const updateContact = (contact) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CONTACT_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update contact\n        const { data } = await axios.put(\n            process.env.REACT_APP_BACKEND_URL+`/api/contacts/${contact.id}`,\n            contact,\n            config\n        );\n        dispatch({\n            type: CONTACT_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CONTACT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete contact\nexport const deleteContact = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CONTACT_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete contact\n        await axios.delete(process.env.REACT_APP_BACKEND_URL+`/api/contacts/${id}`, config);\n        dispatch({\n            type: CONTACT_DELETE_SUCCESS,\n        });\n        window.location.href = \"/contact\";\n    } catch (error) {\n        dispatch({\n            type: CONTACT_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n// import contacts\n//create a contact\nexport const importContact = (contacts) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CONTACT_CREATE_REQUEST,\n        });\n\n        //get contact from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n        const { data } = await axios.post(process.env.REACT_APP_BACKEND_URL+\"/api/imports\", {contacts, id:  userInfo._id}, config);\n        dispatch({\n            type: CONTACT_CREATE_SUCCESS,\n            payload: data,\n        });\n\n        if (data) {\n            alert('import success');\n        }\n    } catch (error) {\n        dispatch({\n            type: CONTACT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","export const CONTACT_LIST_REQUEST = \"CONTACT_LIST_REQUEST\";\nexport const CONTACT_LIST_SUCCESS = \"CONTACT_LIST_SUCCESS\";\nexport const CONTACT_LIST_FAIL = \"CONTACT_LIST_FAIL\";\nexport const CONTACT_LIST_RESET = \"CONTACT_LIST_RESET\";\n\nexport const CONTACT_CREATE_REQUEST = \"CONTACT_CREATE_REQUEST\";\nexport const CONTACT_CREATE_SUCCESS = \"CONTACT_CREATE_SUCCESS\";\nexport const CONTACT_CREATE_FAIL = \"CONTACT_CREATE_FAIL\";\n\nexport const CONTACT_DETAILS_REQUEST = \"CONTACT_DETAILS_REQUEST\";\nexport const CONTACT_DETAILS_SUCCESS = \"CONTACT_DETAILS_SUCCESS\";\nexport const CONTACT_DETAILS_FAIL = \"CONTACT_DETAILS_FAIL\";\nexport const CONTACT_DETAILS_RESET = \"CONTACT_DETAILS_RESET\";\n\nexport const CONTACT_UPDATE_REQUEST = \"CONTACT_UPDATE_REQUEST\";\nexport const CONTACT_UPDATE_SUCCESS = \"CONTACT_UPDATE_SUCCESS\";\nexport const CONTACT_UPDATE_FAIL = \"CONTACT_UPDATE_FAIL\";\nexport const CONTACT_UPDATE_RESET = \"CONTACT_UPDATE_RESET\";\n\nexport const CONTACT_DELETE_REQUEST = \"CONTACT_DELETE_REQUEST\";\nexport const CONTACT_DELETE_SUCCESS = \"CONTACT_DELETE_SUCCESS\";\nexport const CONTACT_DELETE_FAIL = \"CONTACT_DELETE_FAIL\";\nexport const CONTACT_DELETE_RESET = \"CONTACT_DELETE_RESET\";\n","import React, { useEffect, useState } from \"react\";\nimport { CSVLink } from \"react-csv\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"../../components/Select\";\nimport SelectFilter from \"../../components/SelectFilter\";\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ModalButton from \"../../components/ModalButton\";\nimport Modal from \"react-modal\";\nimport Input from \"../../components/form/Input\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Search from \"../../components/Search\";\nimport Pagination from \"../../components/Pagination\";\n/* Actions */\nimport { createContact, listContacts, deleteContact } from \"../../actions/contactActions\";\nimport { listGroups } from \"../../actions/groupActions\";\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\nModal.setAppElement(\"#root\");\nconst ContactScreen = ({ history, match }) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    const [name, setName] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    const [groupId, setGroupId] = useState(null);\n\n    const [errors, setErrors] = useState({});\n    const [keyword, setKeyword] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const [filterGroup, setFilterGroup] = useState(\"\");\n\n    const groupList = useSelector((state) => state.groupList);\n    const { groups } = groupList;\n\n    const dispatch = useDispatch();\n\n    const contactList = useSelector((state) => state.contactList);\n    const { loading, error, contacts, page, pages } = contactList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const contactCreate = useSelector((state) => state.contactCreate);\n    const {\n        loading: createLoading,\n        success: createSuccess,\n        error: createError,\n    } = contactCreate;\n\n    useEffect(() => {\n        dispatch(listContacts(keyword, pageNumber, filterGroup));\n\n        if (createSuccess) {\n            setName(\"\");\n            setPhone(\"\");\n            setEmail(\"\");\n            setGroupId(null)\n            setModalIsOpen(false);\n        }\n\n        \n\n    }, [dispatch, history, userInfo, pageNumber, keyword,filterGroup, createSuccess]);\n\n\n\n    // export contacts data\n    const headersCSV = [\n        { label: \"ID\", key: \"id\" },\n        { label: \"Name\", key: \"name\" },\n        { label: \"Phone\", key: \"phone\" },\n        { label: \"Email\", key: \"email\" },\n        {label: \"Group\", key: \"group.name\" }\n    ];     \n    const csvReport = {\n        data: contacts,\n        headers: headersCSV,\n        filename: 'Contacts.csv'\n    };\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const contact = {\n                name: name,\n                phone: phone,\n                email: email,\n                groupId: groupId\n            };\n            //console.log(contact);return false;\n            dispatch(createContact(contact));\n        }\n    };\n\n    const renderGroupsSelect = () => (\n        <Select\n            data={groupId}\n            setData={setGroupId}\n            items={groups}\n            search={searchGroup}\n        />\n    );\n\n    const searchGroup = (e) => {\n        dispatch(listGroups(e.target.value));\n    };\n\n    const deleteRow = (id) => {\n        dispatch(deleteContact(id));\n    }\n\n    const renderModalCreateContact = () => (\n        <>\n            <ModalButton\n                modal={modalIsOpen}\n                setModal={setModalIsOpen}\n                classes={\"btn btn-success btn-lg btn-mdf\"}\n            />\n            <Modal\n                style={modalStyles}\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n            >\n                <h2>Create Contact</h2>\n                <LoaderHandler loading={createLoading} error={createError} />\n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name={\"name\"}\n                        type={\"text\"}\n                        data={name}\n                        setData={setName}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"email\"}\n                        type={\"email\"}\n                        data={email}\n                        setData={setEmail}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"phone\"}\n                        type={\"text\"}\n                        data={phone}\n                        setData={setPhone}\n                        errors={errors}\n                    />\n                    {renderGroupsSelect()}\n                    \n                    <hr />\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Submit\n                    </button>\n\n                    <ModalButton\n                        modal={modalIsOpen}\n                        setModal={setModalIsOpen}\n                        classes={\"btn-danger float-right\"}\n                    />\n                </form>\n            </Modal>\n        </>\n    );\n\n    const renderTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Phone</th>\n                    <th>Email</th>\n                    <th>Group</th>\n                    <th className=\"d-none d-sm-table-cell\">Created At</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {contacts.map((contact) => (\n                    <tr key={contact.id}>\n                        <td>{contact.id}</td>\n                        <td>{contact.name}</td>\n                        <td>{contact.phone}</td>\n                        <td>{contact.email}</td>\n                        <td>{contact.group ? contact.group.name : ''}</td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {contact.createdAt.slice(0, 10)}\n                        </td>\n\n\n\n\n\n                        <td> \n                            {/* <Link\n                                to={`/contact/${contact.id}/share`}\n                                className=\"btn btn-success btn-lg btn-mdf\"\n                            >\n                                Share\n                            </Link> */}\n                            {contact.userContact[0].mode == 'viewr' ? (\n                                \"\"\n                            ) : (\n                                <Link\n                                    to={`/share/${contact.id}`}\n                                    className=\"btn btn-primary btn-lg btn-mdf\"\n                                >\n                                    Share\n                                </Link>\n                            )}\n\n                            {contact.userContact[0].mode == 'viewr' ? (\n                                \"\"\n                            ) : (\n                                <Link\n                                to={`/contact/${contact.id}/edit`}\n                                    className=\"btn btn-success btn-lg btn-mdf\"\n                                >\n                                    Edit\n                                </Link>\n                            )}\n\n                            {contact.userContact[0].mode == 'viewr' ? (\n                                \"\"\n                            ) : (\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger btn-lg btn-mdf\"\n                                    onClick={(e) => {\n                                        deleteRow(`${contact.id}`)\n                                    }}\n                                >\n                                    Delete\n                                </button>\n                            )}\n\n                            \n                        </td>\n                        <td>\n                              \n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    return (\n        <>\n            <HeaderContent name={\"Contacts\"} />\n\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                     \n\n                    <div className=\"row justify-content-end\">\n                        <div className=\"col-4\">\n                            {renderModalCreateContact()}\n                            <Link\n                                to='/import'\n                                className=\"btn btn-primary btn-lg btn-mdf\"\n                            >\n                                Import\n                            </Link>\n\n                             {/* <CSVLink {...csvReport} className=\"btn btn-primary btn-lg btn-mdf\">Export</CSVLink> */}\n                             <CSVLink data={contacts} headers={headersCSV} filename=\"contacts.csv\" className=\"btn btn-primary btn-lg btn-mdf\">Export</CSVLink>\n                        </div>\n                    </div>\n\n                    <br />\n\n\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">SEARCH</h3>\n                                    <div className=\"card-tools\">\n                                        <Search\n                                            keyword={keyword}\n                                            setKeyword={setKeyword}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">FILTER BY GROUP</h3>\n                                     \n                                    <div className=\"card-tools selectFilter\">\n                                        <SelectFilter\n                                            filterGroup={filterGroup}\n                                            setFilterGroup={setFilterGroup}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderTable}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n\n                            <Pagination\n                                page={page}\n                                pages={pages}\n                                setPage={setPageNumber}\n                            />\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ContactScreen;\n","import React from \"react\";\n\nconst ButtonGoBack = ({ history }) => {\n    const handleClick = () => {\n        history.goBack();\n    };\n\n    return (\n        <button onClick={handleClick} className=\"btn btn-info btn-lg mb-2\">\n            Go Back\n        </button>\n    );\n};\n\nexport default ButtonGoBack;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Input from \"../../components/form/Input\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\nimport Select from \"../../components/Select\";\n/* Constants */\nimport {\n    CONTACT_UPDATE_RESET,\n    CONTACT_DETAILS_RESET,\n    CONTACT_DELETE_RESET,\n} from \"../../constants/contactConstants\";\n\n/* Actions */\nimport {\n    updateContact,\n    listContactDetails,\n} from \"../../actions/contactActions\";\nimport { listGroups } from \"../../actions/groupActions\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\nconst ContactEditScreen = ({ history, match }) => {\n    const contactId = parseInt(match.params.id);\n\n    const [name, setName] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const [groupId, setGroupId] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const groupList = useSelector((state) => state.groupList);\n    const { groups } = groupList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //contact details state\n    const contactDetails = useSelector((state) => state.contactDetails);\n    const { loading, error, contact } = contactDetails;\n\n    //contact update state\n    const contactUpdate = useSelector((state) => state.contactUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = contactUpdate;\n\n    useEffect(() => {\n        //after update redirect to users\n        if (successUpdate) {\n            dispatch({ type: CONTACT_UPDATE_RESET });\n            dispatch({ type: CONTACT_DETAILS_RESET });\n            dispatch({ type: CONTACT_DELETE_RESET });\n            history.push(\"/contact\");\n        }\n\n        //load product data\n        if (contact) {\n            if (!contact.name || contact.id !== contactId) {\n                dispatch(listContactDetails(contactId));\n            } else {\n                //set states\n                setName(contact.name);\n                setPhone(contact.phone);\n                setEmail(contact.email);\n                setGroupId(parseInt(contact.groupId));\n            }\n        }\n    }, [dispatch, history, contactId, contact, successUpdate]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            dispatch(\n                updateContact({\n                    id: contactId,\n                    name,\n                    phone,\n                    email,\n                    groupId\n                })\n            );\n        }\n    };\n    const renderGroupsSelect = () => (\n        <Select\n            data={groupId}\n            setData={setGroupId}\n            items={groups}\n            search={searchGroup}\n        />\n    );\n\n    const searchGroup = (e) => {\n        dispatch(listGroups(e.target.value));\n    };\n\n    const renderForm = () => (\n        <form onSubmit={handleSubmit}>\n            <Input\n                name={\"name\"}\n                type={\"text\"}\n                data={name}\n                setData={setName}\n                errors={errors}\n            />\n             <Input\n                name={\"email\"}\n                type={\"email\"}\n                data={email}\n                setData={setEmail}\n                errors={errors}\n            />\n            <Input\n                name={\"phone\"}\n                type={\"text\"}\n                data={phone}\n                setData={setPhone}\n                errors={errors}\n            />\n            {renderGroupsSelect()}\n            {errors.contact && (\n                <Message message={errors.contact} color={\"warning\"} />\n            )}\n            <hr />\n            <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Contacts\"} />\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">\n                                        Edit Contact\n                                    </h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <LoaderHandler\n                                        loading={loadingUpdate}\n                                        error={errorUpdate}\n                                    />\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        render={renderForm}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ContactEditScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { shareContact} from \"../actions/shareActions\";\nimport styles from  \"./ToggleButton.module.css\";\n\nconst ToggleButton = ({ userId, contactId, toggled, onClick }) => {\n    \n    const [isToggled, setIsToggled] = useState(toggled)\n    const dispatch = useDispatch();\n    const callback = () => {\n        setIsToggled(!isToggled);\n        dispatch(shareContact(userId, parseInt(contactId), !isToggled));\n    }\n\n    return ( \n        <label className={styles.csslabel}>\n            <input type=\"checkbox\" className={styles.cssinput} defaultChecked={isToggled} onClick={callback} />\n            <span className={styles.cssspan} />\n            {/* <strong>{userId}</strong> */}\n        </label>\n     );\n}\n \nexport default ToggleButton;","import axios from \"axios\";\nimport {\n    CONTACT_LIST_REQUEST,\n    CONTACT_LIST_SUCCESS,\n    CONTACT_LIST_FAIL,\n    CONTACT_CREATE_REQUEST,\n    CONTACT_CREATE_SUCCESS,\n    CONTACT_CREATE_FAIL,\n    CONTACT_DETAILS_REQUEST,\n    CONTACT_DETAILS_SUCCESS,\n    CONTACT_DETAILS_FAIL,\n    CONTACT_UPDATE_REQUEST,\n    CONTACT_UPDATE_SUCCESS,\n    CONTACT_UPDATE_FAIL,\n    CONTACT_DELETE_REQUEST,\n    CONTACT_DELETE_SUCCESS,\n    CONTACT_DELETE_FAIL,\n} from \"../constants/contactConstants\";\n\n\n// import contacts\n//create a contact\nexport const shareContact = (userId, contactId, isShared) => async (dispatch, getState) => {\n    //console.log(contactId);return false;\n    try {\n        dispatch({\n            type: CONTACT_CREATE_REQUEST,\n        });\n\n        //get contact from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n        const { data } = await axios.post(process.env.REACT_APP_BACKEND_URL+\"/api/userContacts\", {userId, contactId, isShared}, config);\n\n        if (data) {\n            alert(data.message);\n        }\n     \n    } catch (error) {\n        alert('action fail');\n         dispatch({\n            type: CONTACT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Input from \"../../components/form/Input\";\nimport ModalButton from \"../../components/ModalButton\";\nimport Modal from \"react-modal\";\nimport Checkbox from \"../../components/form/Checkbox\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\nimport Search from \"../../components/Search\";\nimport Pagination from \"../../components/Pagination\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Toggle from \"../../components/ToggleButton\";\n\n/* Actions */\nimport { listUsers, register } from \"../../actions/userActions\";\nimport {\n    listContactDetails,\n} from \"../../actions/contactActions\";\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nconst ContactShareScreen = ({ history, match }) => {\n    const contactId = parseInt(match.params.id);\n    const params = useParams();\n     \n\n    const [contactName, setContactName] = useState(\"\");\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [keyword, setKeyword] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userList = useSelector((state) => state.userList);\n    const { loading, error, users, page, pages } = userList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userRegister = useSelector((state) => state.userRegister);\n    const {\n        loading: createLoading,\n        success: createSuccess,\n        error: createError,\n    } = userRegister;\n\n \n\n    useEffect(() => {  \n        if (userInfo) {\n            dispatch(listUsers(keyword, pageNumber));\n        }\n   \n        if (createSuccess) {\n            setName(\"\");\n            setPassword(\"\");\n            setEmail(\"\");\n            setIsAdmin(false);\n\n            setModalIsOpen(false);\n        }\n    }, [dispatch, userInfo, pageNumber, keyword, history, createSuccess]);\n\n    const logState = state => {\n        //console.log(\"Toggled:\", state)\n    }\n    const getIsSharedContact = (userContact, userId) => {\n         \n        const contact = userContact.filter(item => {\n            return item.contactId == contactId;\n        })\n         \n        return contact.length > 0 ? true : false;\n    }\n\n\n    const renderTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th className=\"d-none d-sm-table-cell\">ID</th>\n                    <th>Name</th>\n                    <th>Email</th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.map((user) => (\n                    <tr key={user.id}>\n                        <td className=\"d-none d-sm-table-cell\">\n                            <Toggle\n                                userId={user.id}\n                                contactId={contactId}\n                                toggled={getIsSharedContact(user.usercontact, user.id)}\n                                onClick={logState}\n                            />\n                        </td>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={contactId} />\n            {/* Main content */}\n             \n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {/* {renderModalCreateUser()} */}\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Share Contacts</h3>\n                                    <div className=\"card-tools\">\n                                        <Search\n                                            keyword={keyword}\n                                            setKeyword={setKeyword}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderTable}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                            <Pagination\n                                page={page}\n                                pages={pages}\n                                setPage={setPageNumber}\n                            />\n                        </div>\n                        <ButtonGoBack history={history} />\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ContactShareScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ModalButton from \"../../components/ModalButton\";\nimport Modal from \"react-modal\";\nimport Input from \"../../components/form/Input\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Search from \"../../components/Search\";\nimport Pagination from \"../../components/Pagination\";\n\n/* Actions */\nimport { importContact } from \"../../actions/contactActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nconst ImportContactScreen = ({ history, match }) => {\n    // const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    // const [name, setName] = useState(\"\");\n\n    // const [errors, setErrors] = useState({});\n    // const [keyword, setKeyword] = useState(\"\");\n    // const [pageNumber, setPageNumber] = useState(1);\n\n    // const dispatch = useDispatch();\n\n    // const categoryList = useSelector((state) => state.categoryList);\n    // const { loading, error, categories, page, pages } = categoryList;\n\n    // const userLogin = useSelector((state) => state.userLogin);\n    // const { userInfo } = userLogin;\n\n    // const categoryCreate = useSelector((state) => state.categoryCreate);\n    // const {\n    //     loading: createLoading,\n    //     success: createSuccess,\n    //     error: createError,\n    // } = categoryCreate;\n\n    // useEffect(() => {\n    //     dispatch(listCategories(keyword, pageNumber));\n\n    //     if (createSuccess) {\n    //         setName(\"\");\n    //         setModalIsOpen(false);\n    //     }\n    // }, [dispatch, history, userInfo, pageNumber, keyword, createSuccess]);\n    const dispatch = useDispatch();\n    const [file, setFile] = useState();\n    const [array, setArray] = useState([]);\n    const fileReader = new FileReader();\n\n    const handleOnChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const csvFileToArray = string => {\n        const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n        const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n       \n        const displayRecords = [];\n        for (let i = 0; i < csvRows.length; i++) {\n            const newRow = csvRows[i].split(',');\n            const aRow = {\n                name: newRow[0].replaceAll('\"',''),\n                phone: newRow[1].replaceAll('\"',''),\n                email: newRow[2].replaceAll('\"','')\n            }\n            displayRecords.push(aRow);\n        }\n        setArray(displayRecords);\n        return displayRecords;\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n         if (file) {\n            fileReader.onload = function (event) {\n                 \n                const text = event.target.result;\n                const array = csvFileToArray(text);\n                dispatch(importContact(array));\n            };\n            fileReader.readAsText(file);\n        }\n    };\n\n    return (\n        <>\n            <HeaderContent name={\"Contacts\"} />\n            <div style={{ textAlign: \"center\" }}>\n                <form onSubmit={submitHandler}>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <input type={\"file\"} accept={\".csv\"} onChange={handleOnChange} />\n                                            <button type=\"submit\" className=\"btn btn-primary btn-lg\">IMPORT CSV</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </form>\n            </div>\n        </>\n    );\n\n};\n\nexport default ImportContactScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ModalButton from \"../../components/ModalButton\";\nimport Modal from \"react-modal\";\nimport Input from \"../../components/form/Input\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Search from \"../../components/Search\";\nimport Pagination from \"../../components/Pagination\";\n\n/* Actions */\nimport { createGroup, listGroups, deleteGroup } from \"../../actions/groupActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nconst GroupScreen = ({ history, match }) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    const [name, setName] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n    const [keyword, setKeyword] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const dispatch = useDispatch();\n\n    const groupList = useSelector((state) => state.groupList);\n    const { loading, error, groups, page, pages } = groupList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const groupCreate = useSelector((state) => state.groupCreate);\n    const {\n        loading: createLoading,\n        success: createSuccess,\n        error: createError,\n    } = groupCreate;\n\n    useEffect(() => {\n        dispatch(listGroups(keyword, pageNumber));\n\n        if (createSuccess) {\n            setName(\"\");\n            setModalIsOpen(false);\n        }\n    }, [dispatch, history, userInfo, pageNumber, keyword, createSuccess]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const group = {\n                name: name,\n            };\n\n            dispatch(createGroup(group));\n        }\n    };\n\n    const deleteRow = (id) => {\n        dispatch(deleteGroup(id));\n    }\n\n    const renderModalCreateGroup = () => (\n        <>\n            <ModalButton\n                modal={modalIsOpen}\n                setModal={setModalIsOpen}\n                classes={\"btn-success btn-lg mb-2\"}\n            />\n            <Modal\n                style={modalStyles}\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n            >\n                <h2>Create Group</h2>\n                <LoaderHandler loading={createLoading} error={createError} />\n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name={\"name\"}\n                        type={\"text\"}\n                        data={name}\n                        setData={setName}\n                        errors={errors}\n                    />\n\n                    <hr />\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Submit\n                    </button>\n\n                    <ModalButton\n                        modal={modalIsOpen}\n                        setModal={setModalIsOpen}\n                        classes={\"btn-danger float-right\"}\n                    />\n                </form>\n            </Modal>\n        </>\n    );\n\n    const renderTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th className=\"d-none d-sm-table-cell\">Created At</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {groups.map((group) => (\n                    <tr key={group.id}>\n                        <td>{group.id}</td>\n                        <td>{group.name}</td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {group.createdAt.slice(0, 10)}\n                        </td>\n                        <td>\n                            <Link\n                                to={`/group/${group.id}/edit`}\n                                className=\"btn btn-success btn-lg\"\n                            >\n                                Edit\n                            </Link>\n\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-danger btn-lg btn-mdf\"\n                                onClick={(e) => {\n                                    deleteRow(`${group.id}`)\n                                }}\n                            >\n                                Delete\n                            </button>\n                        </td>\n                        <td>\n                              \n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    return (\n        <>\n            <HeaderContent name={\"Groups\"} />\n\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {renderModalCreateGroup()}\n\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Groups</h3>\n                                    <div className=\"card-tools\">\n                                        <Search\n                                            keyword={keyword}\n                                            setKeyword={setKeyword}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderTable}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n\n                            <Pagination\n                                page={page}\n                                pages={pages}\n                                setPage={setPageNumber}\n                            />\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default GroupScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Input from \"../../components/form/Input\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\n\n/* Constants */\nimport {\n    GROUP_UPDATE_RESET,\n    GROUP_DETAILS_RESET,\n    GROUP_DELETE_RESET,\n} from \"../../constants/groupConstants\";\n\n/* Actions */\nimport {\n    updateGroup,\n    listGroupDetails,\n} from \"../../actions/groupActions\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\nconst GroupEditScreen = ({ history, match }) => {\n    const groupId = parseInt(match.params.id);\n\n    const [name, setName] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //group details state\n    const groupDetails = useSelector((state) => state.groupDetails);\n    const { loading, error, group } = groupDetails;\n\n    //group update state\n    const groupUpdate = useSelector((state) => state.groupUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = groupUpdate;\n\n    useEffect(() => {\n        //after update redirect to users\n        if (successUpdate) {\n            dispatch({ type: GROUP_UPDATE_RESET });\n            dispatch({ type: GROUP_DETAILS_RESET });\n            dispatch({ type: GROUP_DELETE_RESET });\n            history.push(\"/group\");\n        }\n\n        //load product data\n        if (group) {\n            if (!group.name || group.id !== groupId) {\n                dispatch(listGroupDetails(groupId));\n            } else {\n                //set states\n                setName(group.name);\n            }\n        }\n    }, [dispatch, history, groupId, group, successUpdate]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            dispatch(\n                updateGroup({\n                    id: groupId,\n                    name,\n                })\n            );\n        }\n    };\n\n    const renderForm = () => (\n        <form onSubmit={handleSubmit}>\n            <Input\n                name={\"name\"}\n                type={\"text\"}\n                data={name}\n                setData={setName}\n                errors={errors}\n            />\n            <hr />\n            <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Groups\"} />\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">\n                                        Edit Group\n                                    </h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <LoaderHandler\n                                        loading={loadingUpdate}\n                                        error={errorUpdate}\n                                    />\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        render={renderForm}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default GroupEditScreen;\n","import React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\n//private route, only show for authenticated users\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={props => isAuthenticated() ?\n    (\n        <Component {...props}/>\n    ) : (\n        <Redirect to={{\n            pathname: \"/login\", \n            state: {from: props.location}\n        }} />\n    )\n\n    } />\n);\n\nexport default PrivateRoute;","//check if user is authenticated\nexport const isAuthenticated = () => {\n    if(typeof window == 'undefined'){\n        return false;\n    }\n    if(localStorage.getItem('userInfo')){\n        return JSON.parse(localStorage.getItem('userInfo'));\n    }else{\n        return false;\n    }\n}","import React from 'react';\n\nconst NotFoundScreen = () => {\n    return ( <h1>\n        Not Found\n    </h1> );\n}\n \nexport default NotFoundScreen;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Menu from \"./components/Menu\";\nimport Footer from \"./components/Footer\";\n\n\n\nimport ContactScreen from \"./screens/contact/ContactScreen\";\nimport ContactEditScreen from \"./screens/contact/ContactEditScreen\";\nimport ContactShareScreen from \"./screens/contact/ContactShareScreen\";\n\nimport ImportContactScreen from \"./screens/import/ImportContactScreen\";\n\nimport GroupScreen from \"./screens/group/GroupScreen\";\nimport GroupEditScreen from \"./screens/group/GroupEditScreen\";\n\nimport UserScreen from \"./screens/user/UserScreen\";\nimport UserEditScreen from \"./screens/user/UserEditScreen\";\nimport ProfileScreen from \"./screens/user/ProfileScreen\";\n\n\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport NotFoundScreen from \"./screens/NotFoundScreen\";\n// import AdminRoute from \"./auth/AdminRoute\";\n// import NotAuthorizedScreen from \"./screens/NotAuthorizedScreen\";\n\nconst Main = () => {\n    const dispatch = useDispatch();\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    return (\n        <>\n            <Header />\n            <Menu />\n\n            <div className=\"content-wrapper\">\n                <Switch>\n                    {/* <PrivateRoute\n                        path=\"/active\"\n                        exact\n                        component={ActiveOrdersScreen}\n                    />\n                    <PrivateRoute path=\"/profile\" component={ProfileScreen} /> */}\n                    {/* <AdminRoute\n                        path=\"/user/:id/edit\"\n                        component={UserEditScreen}\n                    />\n                    <AdminRoute path=\"/user\" exact component={UserScreen} /> */}\n\n                    <PrivateRoute\n                        path=\"/contact/:id/edit\"\n                        component={ContactEditScreen}\n                    />\n                    <PrivateRoute path=\"/contact\" component={ContactScreen} />\n                    <PrivateRoute\n                        path=\"/share/:id\"\n                        component={ContactShareScreen}\n                    />\n\n                    <PrivateRoute\n                        path=\"/import\"\n                        component={ImportContactScreen}\n                    />\n\n                    <PrivateRoute\n                        path=\"/group/:id/edit\"\n                        component={GroupEditScreen}\n                    />\n                    <PrivateRoute path=\"/group\" component={GroupScreen} />\n\n                 \n                    <PrivateRoute path=\"/\" component={ContactScreen} />\n                    <Route component={NotFoundScreen} />\n                </Switch>\n            </div>\n            <Footer />\n        </>\n    );\n};\n\nexport default Main;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../actions/userActions\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { Link } from \"react-router-dom\";\nconst LoginScreen = ({ history }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    //get user from state\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo, error, loading } = userLogin;\n\n    useEffect(() => {\n        //if user is logged\n        if (userInfo) {\n            history.push(\"/contact\");\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    };\n\n    const signUp = (e) => {\n        alert('signUp');\n    }\n\n    return (\n        <div\n            className=\"row justify-content-center align-items-center vh-100\"\n            style={{ backgroundColor: \"#cad5df\" }}\n        >\n            <div className=\"login-box\">\n                {/* /.login-logo */}\n                <div className=\"card\">\n                    <div className=\"card-header \">\n                        <div className=\"login-logo\">\n                            <b>DEVCUONG</b>\n                            <div className=\"text-center\">\n                                <img\n                                    className=\"profile-user-img img-fluid img-circle\"\n                                    src={\"/logo.png\"}\n                                    alt=\"User profile picture\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-body login-card-body\">\n                        <p className=\"login-box-msg\">\n                            Sign in to start your session\n                        </p>\n                        {loading && <Loader variable={loading} />}\n                        {error && <Message message={error} color={\"danger\"} />}\n                        <form onSubmit={submitHandler}>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-envelope\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={(e) =>\n                                        setPassword(e.target.value)\n                                    }\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row justify-content-end\">\n                                <div className=\"col-4\">\n                                    <Link\n                                     \n                                    to='/signup'\n                                    className=\"btn btn-primary btn-block\"\n                                >\n                                    Sign Up\n                                </Link>\n                                </div>\n                                <div className=\"col-4\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block\"\n                                    >\n                                        Sign In\n                                    </button>\n                                </div>\n                            </div>\n                            <br />\n                             \n                        </form>\n                        <div></div>\n                    </div>\n                    {/* /.login-card-body */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, signup } from \"../../actions/userActions\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { Link } from \"react-router-dom\";\nconst LoginScreen = ({ history }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [cfpassword, setCfPassword] = useState(\"\");\n    const dispatch = useDispatch();\n    //const [errors, setErrors] = useState({});\n    //get user from state\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo, error, loading } = userLogin;\n\n    useEffect(() => {\n        //if user is logged\n        if (userInfo) {\n            history.push(\"/contact\");\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // //dispatch(login(email, password));\n\n\n        // let errorsCheck = {};\n        // if (!name) {\n        //     errorsCheck.name = \"Name is required\";\n        //     //alert('Name is required');\n        //     //return false;\n        // }\n        // if (!password) {\n        //     errorsCheck.password = \"Password is required\";\n        //     //alert('Password is required');\n        //     //return false;\n        // }\n\n        // if (!email) {\n        //     errorsCheck.email = \"Email is required\";\n        //     //alert('Email is required');\n        //     //return false;\n        // }\n        // if (password !== cfpassword) {\n        //     errorsCheck.cfpassword = \"confirm password not match\";\n        //     //alert('confirm password not match');\n        //     //return false;\n        // }\n\n        // if (Object.keys(errorsCheck).length > 0) {\n        //     setErrors(errorsCheck);\n        // } else {\n        //     setErrors({});\n        // }\n        // //console.log(name)\n        // //return false;\n        // if (Object.keys(errorsCheck).length === 0) {\n         \n        const user = {\n            name: name,\n            email: email,\n            password: password,\n            cfpassword: cfpassword,\n            isAdmin: 1,\n        };\n        //     // console.log(user); return false;\n        //     dispatch(signup(user));\n        // }\n\n        dispatch(signup(user));\n    };\n\n    const backtologin = (e) => {\n        history.push('/login')\n    }\n\n    return (\n        <div\n            className=\"row justify-content-center align-items-center vh-100\"\n            style={{ backgroundColor: \"#cad5df\" }}\n        >\n            <div className=\"login-box\">\n                {/* /.login-logo */}\n                <div className=\"card\">\n                    <div className=\"card-header \">\n                        <div className=\"login-logo\">\n                            <b>DEMO</b>\n                            <div className=\"text-center\">\n                                <img\n                                    className=\"profile-user-img img-fluid img-circle\"\n                                    src={\"/logo.png\"}\n                                    alt=\"User profile picture\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-body login-card-body\">\n                        <p className=\"login-box-msg\">\n                            Sign up User\n                        </p>\n                        {loading && <Loader variable={loading} />}\n                        {error && <Message message={error} color={\"danger\"} />}\n                        <form onSubmit={submitHandler}>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-envelope\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-envelope\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={(e) =>\n                                        setPassword(e.target.value)\n                                    }\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Confirm Password\"\n                                    value={cfpassword}\n                                    onChange={(e) =>\n                                        setCfPassword(e.target.value)\n                                    }\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row justify-content-end\">\n                                <div className=\"col-4\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-primary btn-block\"\n                                        onClick={(e) => {\n                                            backtologin()\n                                        }}\n                                    >\n                                        Back\n                                    </button>\n                                </div>\n                                <div className=\"col-4\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block\"\n                                    >\n                                        Submit\n                                    </button>\n                                </div>\n                            </div>\n                            <br />\n                        </form>\n                        <div></div>\n                    </div>\n                    {/* /.login-card-body */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginScreen;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Main from \"./Main\";\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport SignUpScreen from \"./screens/auth/SignUpScreen\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/login\" component={LoginScreen} />\n                <Route path=\"/signup\" component={SignUpScreen} />\n                <Route path=\"/\" component={Main} />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n    userLoginReducer,\n    userListReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nimport {\n    groupListReducer,\n    groupCreateReducer,\n    groupDetailsReducer,\n    groupUpdateReducer,\n} from \"./reducers/groupReducers\";\n\nimport {\n    contactListReducer,\n    contactCreateReducer,\n    contactDetailsReducer,\n    contactUpdateReducer,\n} from \"./reducers/contactReducers\";\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userList: userListReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdate: userUpdateReducer,\n\n    contactList: contactListReducer,\n    contactCreate: contactCreateReducer,\n    contactDetails: contactDetailsReducer,\n    contactUpdate: contactUpdateReducer,\n\n    groupList: groupListReducer,\n    groupCreate: groupCreateReducer,\n    groupDetails: groupDetailsReducer,\n    groupUpdate: groupUpdateReducer,\n\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\n    : null;\n\nconst initialState = {\n    userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DELETE_RESET,\n} from \"./../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true };\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userListReducer = (\n    state = { loading: true, users: [] },\n    action\n) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true, users: [] };\n        case USER_LIST_SUCCESS:\n            return {\n                loading: false,\n                users: action.payload.users,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LIST_RESET:\n            return { users: [] };\n        default:\n            return state;\n    }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, success: true };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return { user: {} };\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true, user: action.payload };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return { user: {} };\n        default:\n            return state;\n    }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import {\n    CONTACT_LIST_REQUEST,\n    CONTACT_LIST_SUCCESS,\n    CONTACT_LIST_FAIL,\n    CONTACT_LIST_RESET,\n    CONTACT_CREATE_REQUEST,\n    CONTACT_CREATE_SUCCESS,\n    CONTACT_CREATE_FAIL,\n    CONTACT_DETAILS_REQUEST,\n    CONTACT_DETAILS_SUCCESS,\n    CONTACT_DETAILS_FAIL,\n    CONTACT_DETAILS_RESET,\n    CONTACT_UPDATE_REQUEST,\n    CONTACT_UPDATE_SUCCESS,\n    CONTACT_UPDATE_FAIL,\n    CONTACT_UPDATE_RESET,\n    CONTACT_DELETE_REQUEST,\n    CONTACT_DELETE_SUCCESS,\n    CONTACT_DELETE_FAIL,\n    CONTACT_DELETE_RESET,\n} from \"../constants/contactConstants\";\n\nexport const contactListReducer = (\n    state = { loading: true, contacts: [] },\n    action\n) => {\n    switch (action.type) {\n        case CONTACT_LIST_REQUEST:\n            return { loading: true, contacts: [] };\n        case CONTACT_LIST_SUCCESS:\n            return {\n                loading: false,\n                contacts: action.payload.contacts,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case CONTACT_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CONTACT_LIST_RESET:\n            return { contacts: [] };\n        default:\n            return state;\n    }\n};\n\nexport const contactCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONTACT_CREATE_REQUEST:\n            return { loading: true };\n        case CONTACT_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case CONTACT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const contactDetailsReducer = (state = { contact: {} }, action) => {\n    switch (action.type) {\n        case CONTACT_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CONTACT_DETAILS_SUCCESS:\n            return { loading: false, contact: action.payload };\n        case CONTACT_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONTACT_DETAILS_RESET:\n            return { contact: {} };\n        default:\n            return state;\n    }\n};\n\nexport const contactUpdateReducer = (state = { contact: {} }, action) => {\n    switch (action.type) {\n        case CONTACT_UPDATE_REQUEST:\n            return { loading: true };\n        case CONTACT_UPDATE_SUCCESS:\n            return { loading: false, success: true, contact: action.payload };\n        case CONTACT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONTACT_UPDATE_RESET:\n            return { contact: {} };\n        default:\n            return state;\n    }\n};\n\nexport const contactDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONTACT_DELETE_REQUEST:\n            return { loading: true };\n        case CONTACT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CONTACT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONTACT_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import {\n    GROUP_LIST_REQUEST,\n    GROUP_LIST_SUCCESS,\n    GROUP_LIST_FAIL,\n    GROUP_LIST_RESET,\n    GROUP_CREATE_REQUEST,\n    GROUP_CREATE_SUCCESS,\n    GROUP_CREATE_FAIL,\n    GROUP_DETAILS_REQUEST,\n    GROUP_DETAILS_SUCCESS,\n    GROUP_DETAILS_FAIL,\n    GROUP_DETAILS_RESET,\n    GROUP_UPDATE_REQUEST,\n    GROUP_UPDATE_SUCCESS,\n    GROUP_UPDATE_FAIL,\n    GROUP_UPDATE_RESET,\n    GROUP_DELETE_REQUEST,\n    GROUP_DELETE_SUCCESS,\n    GROUP_DELETE_FAIL,\n    GROUP_DELETE_RESET,\n} from \"../constants/groupConstants\";\n\nexport const groupListReducer = (\n    state = { loading: true, groups: [] },\n    action\n) => {\n    switch (action.type) {\n        case GROUP_LIST_REQUEST:\n            return { loading: true, groups: [] };\n        case GROUP_LIST_SUCCESS:\n            return {\n                loading: false,\n                groups: action.payload.groups,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case GROUP_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case GROUP_LIST_RESET:\n            return { groups: [] };\n        default:\n            return state;\n    }\n};\n\nexport const groupCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case GROUP_CREATE_REQUEST:\n            return { loading: true };\n        case GROUP_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case GROUP_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const groupDetailsReducer = (state = { group: {} }, action) => {\n    switch (action.type) {\n        case GROUP_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case GROUP_DETAILS_SUCCESS:\n            return { loading: false, group: action.payload };\n        case GROUP_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case GROUP_DETAILS_RESET:\n            return { group: {} };\n        default:\n            return state;\n    }\n};\n\nexport const groupUpdateReducer = (state = { group: {} }, action) => {\n    switch (action.type) {\n        case GROUP_UPDATE_REQUEST:\n            return { loading: true };\n        case GROUP_UPDATE_SUCCESS:\n            return { loading: false, success: true, group: action.payload };\n        case GROUP_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case GROUP_UPDATE_RESET:\n            return { group: {} };\n        default:\n            return state;\n    }\n};\n\nexport const groupDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case GROUP_DELETE_REQUEST:\n            return { loading: true };\n        case GROUP_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case GROUP_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case GROUP_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux'\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport store from './store';\n\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}